html
	//아 개인적으로 계속 html 영상 따라 페이지 만들어줘야함.
상부 header
중단 main
	-main의 상단(제목부) : title(main만 해당되는 것은 아님.)
main 옆쪽 : aside
하부 : footer - 저작권자의 정보를 표현하는 부분
------------------------------------------------
목록
(ex)딸기청, 아메라카노, 쿠키)
<ol>,<ul>,<dl>
//<menu>도 있지만 실험적.
ol = ordered list 1. 2. 3. 과 같이 숫자 순서
ul : unordered list  ·과 같은 특수문자 순서
dl : definition list 
	<dt>어묵탕</dt>	-설명할 주제
	<dd>따뜻한 국물</dd> - 주제에 대한 설명
li : list item : ul, ol 태그 안의 태그.
여기까지 기본 스타일 적용
------------------------------------------------

컨텐츠는 무조건 제목이 있어야함.

목차만 발췌하여 보여주는 뭐시기가 있다는데... 몰라
->최근에는 이렇게 안함
->크롬 확장프로그램으로 설치하여 사용 가능. htmloutliner
-> 이거 살짝 안맞음.
이걸 정리하는게 outline 정리
->h1, h2, h3, ...등으로 제목을 달아주면 됨.

------------------------------------------------

로고(페이지 자체의 제목)
	=> h1을 이용하여 진짜 제목 달아주기
------------------------------------------------
	
div로 테마별로 묶어주기 -> 여기까지가 구조화 과정

------------------------------------------------
<시멘틱>
어떤 한 구역을 쉽게 찾게 해주는 표시 = <id>
ex) <div id = "header">
이걸 쓰던 시절이 있었음.
영역마다 반드시 붙여 사용하다보니 통일할 필요성을 느낌 -> 그래서 header main footer 이렇게 씀
저작권자의 정보를 가진 영역이 위에 있어도 footer
결국 정의가 내려진 거임.
->이래서 결국 태그명이 따로 나옴. 
<header />
<main />
<footer />

문서 내에서 헤더가 단 하나가 나오는 것이 아니기 때문에 id를 안쓰지는 않음.

이로 인해 의미가 분명해짐 = 시멘틱 해짐.

-------------------------------------------------
<섹션>
그룹핑을 해도 번호를 붙이는건 너무 불편함.

제목을 컨텐츠와 묶어주는 영역을 담당 = 섹션

<h2>와 같은 제목태그와 그 하위의 내용들을 묶어주는 div가 있을때, 이 둘을 묶어주는 div 태그는 섹션이 된다.

-근데 불편하니까 그 둘을 묶어주는 태그는 <section>으로 한다.

대신 섹션의 제목은 <h1> 태그를 사용한다.

<section> / <div> 둘 다 사용가능.

그러나 수업은 <section>을 사용한다.

섹션 = 제목을 이끌고 있는 영역.
제목이 없으면 이상하다.
보이는 것은 이미지가 먼저지만 문서의 내용을 봤을 때는 제목이 가장 앞에 오는 것이 바람직하다.
-css가 바뀌더라도.

htmloutliner를 이용하여 확인해도 문제가 전혀 없다.

<header>는 섹션인가? 아님. 그럼 섹션으로 바꿔주는가? 아님. h1을 이끌고 있는 body가 가장 큰 제목?이기 때문에 바꾸면 안된다.
섹셔닝은 하면 안된다.

그럼 header 안의 <h2>는? 섹션으로 붂어서 h1으로 바꿔줘도 됨.

-------------------------------------------------

<header>는 섹션태그가 전혀 아니다.
섹션 안에서 여기는 헤더 영역이에요 라고 영역표현할 때 쓰는 것
헤더의 섹션은 바디임.
헤더라는 태그는 섹션마다 들어갈 수 있다.

제목말고 추가적으로 제목 외에 제목에?이? 포함한 영역이 필요한 때가 있다.

제목과 함께 사용되는 컨텐츠들이 어울려 묶여야하는 경우 = 섹션에서의 헤더

19강 2분대 확인 필요.

섹션에는 footer가 포함될 수 있다.
-저작권자의 정보가 포함될 수 있고, 그걸 footer로 감싸준다.

------------------------------------------------- 헤더는 여러개가 될수 있는가?
-html5 이후 개발된 3개의 태그.
<section>
ㄴ<article>
ㄴ<aside/>
ㄴ<nav />
각 요소들에 들어맞게 사용하면 의미가 살아있지 않겠는가?

그래서 쟤들이 뭔데?
<article>
섹션 중 내용을 가진 섹션
<aside>
-사이드를 의미.
-메인섹션과 동떨어진 섹션들.
<nav>
-네비게이터.
-클릭하면 다른 페이지로 넘어감. <a href>라고 생각해도 되나?
-섹션도 되고 nav도 되고. 근데 의미가 살아야하니까 nav쓰자.
-이도저도 아니면 section

--------------------------------------------------

딸기청,아메리카노, 쿠키 -> 네비게이터 섹션
전체메뉴 : 클릭하면 메뉴로 넘어감 -> 이것도 네비게이터
전체메뉴 자체가 어떠한 5가지 주제에 얽매이지 않는, 다른 곳에 묶여 사용되는 기생 컨텐츠.


section태그
	section의 조건
		-제목 + 내용(컨텐츠)
		
시멘틱(의미가 부여된) section
-article
-aside
-nav

section 부분을 만드는 태그로 div가 사용되었는데
section의 필수 영역에 대해서는 시멘틱한 태그가 추가되었다.
-header
-main
-footer

모든 섹션은 위 3요소를 가질 수 있는가
-article, aside의 경우 main을 가질 수 없다.
-nav는 header, footer를 가질 수 없다. - 컨텐츠로 내용이라는 것이 없음. 따라서 저작권(글쓴이, 저작권법)과 관련해 쓸게 없음. 즉, header footer가 없다.

